private static void saveJsonToFile(Context context, String jsonString) {
        try {
            File downloadsDirectory = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS);
            File file = new File(downloadsDirectory, "FC.json");

            FileOutputStream outputStream = new FileOutputStream(file);
            outputStream.write(jsonString.getBytes());
            outputStream.close();

            Toast.makeText(context, "File was saved successfully", Toast.LENGTH_SHORT).show();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

This method requires an updatedJsonString. You can see an example of the use here:

1. A jsonObject.toString. You can see how to do this in this example:
private void addMembersToFile(ArrayList<Member> members) {
        if (members.size() != 0) {
            String jsonString = "{\"Members\": []}";
            try {
                JSONObject jsonObject = new JSONObject(jsonString);
                JSONArray membersArray = jsonObject.getJSONArray("Members");


                for(int i = 0; i < members.size(); i++) {
                    JSONObject membersObject = new JSONObject();
                    membersObject.put("prename", members.get(i).getPrename());
                    membersObject.put("surname", members.get(i).getSurname());
                    membersObject.put("nickname", members.get(i).getNickname());
                    membersArray.put(membersObject);
                    jsonObject.put("Members", membersArray);
                    String updatedJsonString = jsonObject.toString();
                    saveJsonToFile(updatedJsonString);
                }

            } catch (JSONException e) {
                throw new RuntimeException(e);
            }
        }
    }